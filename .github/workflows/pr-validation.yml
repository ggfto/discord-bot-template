name: PR Validation

on:
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: read

jobs:
  lint_and_test:
    name: 🧹 Lint & ✅ Testes
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: |
          echo "::group::Instalando dependências"
          npm install
          echo "::endgroup::"

      - name: Run ESLint
        run: |
          echo "::group::Rodando Linter"
          npm run lint
          echo "::endgroup::"

      - name: Run tests
        run: |
          echo "::group::Rodando Testes Unitários"
          npm test
          echo "::endgroup::"

  docker_build_test:
    name: 🐳 Build Docker (Test)
    runs-on: ubuntu-latest
    needs: lint_and_test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker Metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: test/${{ github.repository }}
          tags: |
            type=raw,value=pr-${{ github.event.pull_request.number }}

      - name: Build Docker image (no push)
        run: |
          echo "::group::Build Docker para PR #${{ github.event.pull_request.number }}"
          docker buildx build --platform linux/amd64,linux/arm64 \
            -t ${{ steps.meta.outputs.tags }} \
            --load .
          echo "::endgroup::"
